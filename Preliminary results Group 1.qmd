---
title: "Variables over time per species"
format: html
editor: visual
---

```{r}
# Load the data
load("data/bound-data.Rdata")

# Load necessary libraries
library(dplyr)
library(ggplot2)

# Convert Week to a factor
datab$Week1 <- as.factor(datab$Week)
datab$Soil_humidity <-  as.numeric(datab$Soil_humidity)
datab$Species[datab$Species=="Amaranthus retroflexus "] <- "Amaranthus retroflexus" 
```

Plant height

```{r}
# Group by Species, Treatment, and Week and calculate mean plant height
meanheight_byweeks <- datab %>%
  group_by(Species, Treatment, Week) %>%
  summarise(Mean_plant_height = mean(Plant_height))

# Create a ggplot with facets for each species
ggplot(meanheight_byweeks, aes(x = Week, y = Mean_plant_height, color = Treatment, group = Treatment)) +
  geom_point() +
  geom_line() +
  theme_bw() +
  facet_wrap(~Species, scales = "free_y")+
labs(title = "Mean Plant Height Over Weeks",
       x = "Week",
       y = "Mean Plant Height") +
  theme(legend.position = "top", legend.box.background = element_rect(colour = "black")) # Facet by Species with free y-axis scales

```

Soil humidity

```{r}
# Group by Species, Treatment, and Week and calculate mean soil humidity
meanhumidity_byweeks <- datab %>%
    filter(!is.na(Soil_humidity)) %>%
  group_by(Species, Treatment, Week) %>%
  summarise(Mean_soil_humidity = mean(Soil_humidity))

# Create a ggplot with facets for each species 
ggplot(meanhumidity_byweeks, aes(x = Week, y = Mean_soil_humidity, color = Treatment, group = Treatment)) +
  geom_point() +
  geom_line() +
  theme_bw() +
  facet_wrap(~Species, scales = "free_y")+  # Facet by Species with free y-axis scales
labs(title = "Mean Soil Humidity Over Weeks",
       x = "Week",
       y = "Mean Soil Humidity") +
  theme(legend.position = "top", legend.box.background = element_rect(colour = "black"))
```

Leaf_number

```{r}
# Group by Species, Treatment, and Week and calculate mean leaf number
meanleafnumber_byweeks <- datab %>%
  filter(!is.na(Leaf_number)) %>%
  group_by(Species, Treatment, Week) %>%
  summarise(Mean_leaf_number = mean(Leaf_number))

# Create a ggplot with facets for each species
ggplot(meanleafnumber_byweeks, aes(x = Week, y = Mean_leaf_number, color = Treatment, group = Treatment)) +
  geom_point() +
  geom_line() +
  theme_bw() +
  facet_wrap(~Species, scales = "free_y")+  # Facet by Species with free y-axis scales
labs(title = "Mean Leaf Number Over Weeks",
       x = "Week",
       y = "Mean Leaf Number") +
  theme(legend.position = "top", legend.box.background = element_rect(colour = "black"))
```

Chlorophyll_content bar

```{r}
meanchlorophyll_byweeks <- datab %>%
  filter(!is.na(Chlorophyll_content)) %>%
  group_by(Species, Treatment, Week) %>%
  summarise(Mean_Chlorophyll = mean(Chlorophyll_content))
#barplot

ggplot(meanchlorophyll_byweeks, aes(x = Species, y = Mean_Chlorophyll, fill = Treatment, colour = Treatment)) +   geom_bar(stat = "identity", position = "dodge")+
  labs(title = "Mean Chlorophyll Content by Species and Treatment",
       x = "Species",
       y = "Mean Chlorophyll Content") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust=1))+
  scale_fill_brewer(palette="Set1") 
```

Aerial_fresh_weight #CHANGE GRAPH TYPE MAYBE BAR GRAPH

```{r}
# Group by Species, Treatment, and Week and calculate mean 
meanaerialfresh_byweeks <- datab %>%
  filter(!is.na(Aerial_fresh_weight)) %>%
  group_by(Species, Treatment) %>%
  summarise(Mean_Aerialfresh = mean(Aerial_fresh_weight))

#barplot

ggplot(meanaerialfresh_byweeks, aes(x = Species, y = Mean_Aerialfresh, fill = Treatment, colour = Treatment)) +   geom_bar(stat = "identity", position = "dodge")+
  labs(title = "Mean Aerial Fresh Weight by Species and Treatment",
       x = "Species",
       y = "Mean Aerial Fresh Weight") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust=1))+
  scale_fill_brewer(palette="Set1") 

```

Aerial_dry_weight

```{r}
# Group by Species, Treatment, and Week and calculate mean 
meanaerialdry_byweeks <- datab %>%
  filter(!is.na(Aerial_dry_weight)) %>%
  group_by(Species, Treatment) %>%
  summarise(Mean_Aerialdry = mean(Aerial_dry_weight))
#barplot

ggplot(meanaerialdry_byweeks, aes(x = Species, y = Mean_Aerialdry, fill = Treatment, colour = Treatment)) +   geom_bar(stat = "identity", position = "dodge")+
  labs(title = "Mean Aerial Dry Weight by Species and Treatment",
  x = "Species",
  y = "Mean Aerial Dry Weight") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust=1))+
  scale_fill_brewer(palette="Set1") 
```

Root_length

```{r}
# Group by Species, Treatment, and Week and calculate mean 
meanroot_lenght <- datab %>%
  filter(!is.na(Root_length)) %>%
  group_by(Species, Treatment) %>%
  summarise(Mean_Rootlength = mean(Root_length))
#barplot

ggplot(meanroot_lenght, aes(x = Species, y = Mean_Rootlength, fill = Treatment, colour = Treatment)) +   geom_bar(stat = "identity", position = "dodge")+
  labs(title = "Mean Root Lenght by Species and Treatment",
  x = "Species",
  y = "Mean Root Lenght") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust=1))+
  scale_fill_brewer(palette="Set1")
```

Root_fresh_weight

```{r}
# Group by Species, Treatment, and Week and calculate mean 
meanroot_fresh <- datab %>%
  filter(!is.na(Roots_fresh_weight)) %>%
  group_by(Species, Treatment) %>%
  summarise(Mean_Rootfresh = mean(Roots_fresh_weight))
#barplot

ggplot(meanroot_fresh, aes(x = Species, y = Mean_Rootfresh, fill = Treatment, colour = Treatment)) +   geom_bar(stat = "identity", position = "dodge")+
  labs(title = "Mean Root Fresh Weight by Species and Treatment",
  x = "Species",
  y = "Mean Root Fresh Weight") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust=1))+
  scale_fill_brewer(palette="Set1")
```

Root_dry_weight

```{r}
# Group by Species, Treatment, and Week and calculate mean 
meanroot_dry <- datab %>%
  filter(!is.na(Roots_dry_weight)) %>%
  group_by(Species, Treatment) %>%
  summarise(Mean_Rootdry = mean(Roots_dry_weight))
#barplot

ggplot(meanroot_dry, aes(x = Species, y = Mean_Rootdry, fill = Treatment, colour = Treatment)) +   geom_bar(stat = "identity", position = "dodge")+
  labs(title = "Mean Root Dry Weight by Species and Treatment",
  x = "Species",
  y = "Mean Root Dry Weight") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust=1))+
  scale_fill_brewer(palette="Set1")
```

Statistical analysis - Descriptive analysis (Centered and deviation measures) for soil humidity.

```{r}
library(agricolae)

datab$Soil_humidity <- as.numeric(datab$Soil_humidity)

st.sh <- datab %>%
  filter(!is.na(Soil_humidity)) %>%
  group_by(Species,Treatment,Week) %>%
  summarise(Mean.Soil.Humidity = mean(Soil_humidity),
            Median.Soil.Humidity = median(Soil_humidity),
            Variance.Soil.Humidity = var(Soil_humidity),
            Standard.Deviation.Soil.Humidity = sd(Soil_humidity))
```

Statistical analysis - Descriptive analysis (Centered and deviation measures) for plant height.

```{r}
st.ph <- datab %>%
  filter(!is.na(Plant_height)) %>%
  group_by(Species,Treatment,Week) %>%
  summarise(Mean.Plant.Height = mean(Plant_height),
            Median.Plant.Height = median(Plant_height),
            Variance.Plant.Height = var(Plant_height),
            Standard.Deviation.Plant.Height = sd(Plant_height))
```

Statistical analysis - Descriptive analysis (Centered and deviation measures) for leaf number.

```{r}
st.ln <- datab %>%
  filter(!is.na(Leaf_number)) %>%
  group_by(Species,Treatment,Week) %>%
  summarise(Mean.Leaf.Number = mean(Leaf_number),
            Median.Leaf.Number = median(Leaf_number),
            Variance.Leaf.Number = var(Leaf_number),
            Standard.Deviation.Leaf.Number = sd(Leaf_number))

```

Statistical analysis - Descriptive analysis (Centered and deviation measures) for chlorophyll content.

```{r}
st.cc <- datab %>%
  filter(!is.na(Chlorophyll_content)) %>%
  group_by(Species,Treatment,Week) %>%
  summarise(Mean.Chlorophyll.Content = mean(Chlorophyll_content),
            Median.Chlorophyll.Content = median(Chlorophyll_content),
            Variance.Chlorophyll.Content = var(Chlorophyll_content),
            Standard.Deviation.Chlorophyll.Content = sd(Chlorophyll_content))

```

Statistical analysis - Descriptive analysis (Centered and deviation measures) for aerial fresh weight.

```{r}
st.afw <- datab %>%
  filter(!is.na(Aerial_fresh_weight)) %>%
  group_by(Species,Treatment,Week) %>%
  summarise(Mean.Aerial.Fresh.Weight = mean(Aerial_fresh_weight),
            Median.Aerial.Fresh.Weight = median(Aerial_fresh_weight),
            Variance.Aerial.Fresh.Weight = var(Aerial_fresh_weight),
            Standard.Deviation.Aerial.Fresh.Weight = sd(Aerial_fresh_weight))

```

Statistical analysis - Descriptive analysis (Centered and deviation measures) for root length.

```{r}
st.rl <- datab %>%
  filter(!is.na(Root_length)) %>%
  group_by(Species,Treatment,Week) %>%
  summarise(Mean.Root.Length = mean(Root_length),
            Median.Root.Length = median(Root_length),
            Variance.Root.Length = var(Root_length),
            Standard.Deviation.Root.Length = sd(Root_length))

```

Statistical analysis - Descriptive analysis (Centered and deviation measures) for root fresh weight.

```{r}
st.rfw <- datab %>%
  filter(!is.na(Roots_fresh_weight)) %>%
  group_by(Species,Treatment,Week) %>%
  summarise(Mean.Roots.Fresh.Weight = mean(Roots_fresh_weight),
            Median.Roots.Fresh.Weight = median(Roots_fresh_weight),
            Variance.Roots.Fresh.Weight = var(Roots_fresh_weight),
            Standard.Deviation.Roots.Fresh.Weight = sd(Roots_fresh_weight))
```

Statistical Analyis - ANOVA, Tukey HSD and Kruskal-Wallis for soil humidity.

```{r}
st.sh <- st.sh %>%
tidyr::unite("SpeciesTreatment",Species:Treatment, remove=FALSE)
  
ansh <- aov(formula = st.sh$Mean.Soil.Humidity ~ st.sh$SpeciesTreatment)
ansh

hsdsh <- HSD.test(ansh, trt="st.sh$SpeciesTreatment")
hsdsh

krsh <- agricolae::kruskal(st.sh$Mean.Soil.Humidity,trt=st.sh$SpeciesTreatment)
krsh

shsh <- shapiro.test(ansh$residuals)
shsh
```

Statistical Analyis - ANOVA, Tukey HSD and Kruskal-Wallis for plant height.

```{r}
st.ph <- st.ph %>%
tidyr::unite("SpeciesTreatment",Species:Treatment, remove=FALSE)
  
anph <- aov(formula = st.ph$Mean.Plant.Height ~ st.ph$SpeciesTreatment)
anph

hsdph <- HSD.test(anph, trt="st.ph$SpeciesTreatment")
hsdph

krph <- agricolae::kruskal(st.ph$Mean.Plant.Height,trt=st.ph$SpeciesTreatment)
krph

shph <- shapiro.test(anph$residuals)
shph
```

Statistical Analyis - ANOVA, Tukey HSD and Kruskal-Wallis for leaf number.

```{r}
st.ln <- st.ln %>%
tidyr::unite("SpeciesTreatment",Species:Treatment, remove=FALSE)
  
anln <- aov(formula = st.ln$Mean.Leaf.Number ~ st.ln$SpeciesTreatment)
anln

hsdln <- HSD.test(anln, trt="st.ln$SpeciesTreatment")
hsdln

krln <- agricolae::kruskal(st.ln$Mean.Leaf.Number,trt=st.ln$SpeciesTreatment)
krln

shln <- shapiro.test(anln$residuals)
shln
```

Statistical Analyis - ANOVA, Tukey HSD and Kruskal-Wallis for chlorophyll content.

```{r}
st.cc <- st.cc %>%
tidyr::unite("SpeciesTreatment",Species:Treatment, remove=FALSE)
  
ancc <- aov(formula = st.cc$Mean.Chlorophyll.Content ~ st.cc$SpeciesTreatment)
ancc

hsdcc <- HSD.test(ancc, trt="st.cc$SpeciesTreatment")
hsdcc

krcc <- agricolae::kruskal(st.cc$Mean.Chlorophyll.Content,trt=st.cc$SpeciesTreatment)
krcc

shcc <- shapiro.test(ancc$residuals)
shcc
```

Statistical Analyis - ANOVA, Tukey HSD and Kruskal-Wallis for aerial fresh weight.

```{r}
st.afw <- st.afw %>%
tidyr::unite("SpeciesTreatment",Species:Treatment, remove=FALSE)
  
anafw <- aov(formula = st.afw$Mean.Aerial.Fresh.Weight ~ st.afw$SpeciesTreatment)
anafw

hsdafw <- HSD.test(anafw, trt="st.afw$SpeciesTreatment")
hsdafw

krafw <- agricolae::kruskal(st.afw$Mean.Aerial.Fresh.Weight,trt=st.afw$SpeciesTreatment)
krafw

shafw <- shapiro.test(anafw$residuals)
shafw
```

Statistical Analyis - ANOVA, Tukey HSD and Kruskal-Wallis for root length.

```{r}
st.rl <- st.rl %>%
tidyr::unite("SpeciesTreatment",Species:Treatment, remove=FALSE)
  
anrl <- aov(formula = st.rl$Mean.Root.Length ~ st.rl$SpeciesTreatment)
anrl

hsdrl <- HSD.test(anrl, trt="st.rl$SpeciesTreatment")
hsdrl

krrl <- agricolae::kruskal(st.rl$Mean.Root.Length,trt=st.rl$SpeciesTreatment)
krrl

shrl <- shapiro.test(anrl$residuals)
shrl
```

Statistical Analyis - ANOVA, Tukey HSD and Kruskal-Wallis for root fresh weight.

```{r}
st.rfw <- st.rfw %>%
tidyr::unite("SpeciesTreatment",Species:Treatment, remove=FALSE)
  
anrfw <- aov(formula = st.rfw$Mean.Roots.Fresh.Weight ~ st.rfw$SpeciesTreatment)
anrfw

hsdrfw <- HSD.test(anrfw, trt="st.rfw$SpeciesTreatment")
hsdrfw

krrfw <- agricolae::kruskal(st.rfw$Mean.Roots.Fresh.Weight,trt=st.rfw$SpeciesTreatment)
krrfw

shrfw <- shapiro.test(anrfw$residuals)
shrfw
```

\`\`\`
